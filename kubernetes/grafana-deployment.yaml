apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose.exe convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: grafana
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose.exe convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: grafana
    spec:
      containers:
        - env:
            - name: GF_INSTALL_PLUGINS
              valueFrom:
                configMapKeyRef:
                  key: GF_INSTALL_PLUGINS
                  name: configuration-env
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: GF_SECURITY_ADMIN_PASSWORD
                  name: configuration-env
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                configMapKeyRef:
                  key: GF_SECURITY_ADMIN_USER
                  name: configuration-env
            - name: INFLUXDB_ADMIN_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: INFLUXDB_ADMIN_PASSWORD
                  name: configuration-env
            - name: INFLUXDB_ADMIN_USER
              valueFrom:
                configMapKeyRef:
                  key: INFLUXDB_ADMIN_USER
                  name: configuration-env
            - name: INFLUXDB_DB
              valueFrom:
                configMapKeyRef:
                  key: INFLUXDB_DB
                  name: configuration-env
          image: grafana/grafana:8.0.2
          name: grafana
          ports:
            - containerPort: 3000
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-data
            - mountPath: /etc/grafana/provisioning/
              name: grafana-claim1
            - mountPath: /var/lib/grafana/dashboards/
              name: grafana-claim2
      restartPolicy: Always
      volumes:
        - name: grafana-data
          persistentVolumeClaim:
            claimName: grafana-data
        - name: grafana-claim1
          persistentVolumeClaim:
            claimName: grafana-claim1
        - name: grafana-claim2
          persistentVolumeClaim:
            claimName: grafana-claim2
status: {}
